// Code generated by ent, DO NOT EDIT.

package gamerole

import (
	"time"
)

const (
	// Label holds the string label denoting the gamerole type in the database.
	Label = "game_role"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldAccountID holds the string denoting the account_id field in the database.
	FieldAccountID = "account_id"
	// FieldRoleID holds the string denoting the role_id field in the database.
	FieldRoleID = "role_id"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldRegion holds the string denoting the region field in the database.
	FieldRegion = "region"
	// FieldRegionName holds the string denoting the region_name field in the database.
	FieldRegionName = "region_name"
	// FieldNickName holds the string denoting the nick_name field in the database.
	FieldNickName = "nick_name"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"
	// Table holds the table name of the gamerole in the database.
	Table = "game_roles"
)

// Columns holds all SQL columns for gamerole fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldAccountID,
	FieldRoleID,
	FieldLevel,
	FieldRegion,
	FieldRegionName,
	FieldNickName,
	FieldCreateAt,
	FieldUpdateAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// AccountIDValidator is a validator for the "account_id" field. It is called by the builders before save.
	AccountIDValidator func(string) error
	// RoleIDValidator is a validator for the "role_id" field. It is called by the builders before save.
	RoleIDValidator func(string) error
	// DefaultLevel holds the default value on creation for the "level" field.
	DefaultLevel int
	// DefaultRegion holds the default value on creation for the "region" field.
	DefaultRegion string
	// RegionValidator is a validator for the "region" field. It is called by the builders before save.
	RegionValidator func(string) error
	// DefaultRegionName holds the default value on creation for the "region_name" field.
	DefaultRegionName string
	// RegionNameValidator is a validator for the "region_name" field. It is called by the builders before save.
	RegionNameValidator func(string) error
	// DefaultNickName holds the default value on creation for the "nick_name" field.
	DefaultNickName string
	// NickNameValidator is a validator for the "nick_name" field. It is called by the builders before save.
	NickNameValidator func(string) error
	// DefaultCreateAt holds the default value on creation for the "create_at" field.
	DefaultCreateAt func() time.Time
	// DefaultUpdateAt holds the default value on creation for the "update_at" field.
	DefaultUpdateAt func() time.Time
	// UpdateDefaultUpdateAt holds the default value on update for the "update_at" field.
	UpdateDefaultUpdateAt func() time.Time
)
