// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatsColumns holds the columns for the "chats" table.
	ChatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "chat_id", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeString, Default: ""},
		{Name: "is_forum", Type: field.TypeBool, Default: false},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "user_name", Type: field.TypeString, Default: ""},
		{Name: "first_name", Type: field.TypeString, Default: ""},
		{Name: "last_name", Type: field.TypeString, Default: ""},
		{Name: "description", Type: field.TypeString, Size: 2147483647, Default: "", SchemaType: map[string]string{"mysql": "text"}},
		{Name: "create_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// ChatsTable holds the schema information for the "chats" table.
	ChatsTable = &schema.Table{
		Name:       "chats",
		Columns:    ChatsColumns,
		PrimaryKey: []*schema.Column{ChatsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "chat_chat_id",
				Unique:  true,
				Columns: []*schema.Column{ChatsColumns[1]},
			},
		},
	}
	// ChatOptionsColumns holds the columns for the "chat_options" table.
	ChatOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "chat_id", Type: field.TypeInt64},
		{Name: "key", Type: field.TypeString, Size: 50},
		{Name: "value", Type: field.TypeString, Default: ""},
		{Name: "create_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// ChatOptionsTable holds the schema information for the "chat_options" table.
	ChatOptionsTable = &schema.Table{
		Name:       "chat_options",
		Columns:    ChatOptionsColumns,
		PrimaryKey: []*schema.Column{ChatOptionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "chatoption_chat_id_key",
				Unique:  true,
				Columns: []*schema.Column{ChatOptionsColumns[1], ChatOptionsColumns[2]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "is_bot", Type: field.TypeBool, Default: false},
		{Name: "user_name", Type: field.TypeString, Default: ""},
		{Name: "first_name", Type: field.TypeString, Default: ""},
		{Name: "last_name", Type: field.TypeString, Default: ""},
		{Name: "create_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "update_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_user_id",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_user_name",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatsTable,
		ChatOptionsTable,
		UsersTable,
	}
)

func init() {
}
